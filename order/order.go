// Code generated by goctl. DO NOT EDIT!
// Source: order.proto

package order

import (
	"context"

	"github.com/reation/home_order_service/proto/types/proto"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Id                = proto.Id
	OrderId           = proto.OrderId
	OrderInfo         = proto.OrderInfo
	OrderListResponse = proto.OrderListResponse
	UserId            = proto.UserId

	Order interface {
		GetOrderInfoByID(ctx context.Context, in *Id, opts ...grpc.CallOption) (*OrderInfo, error)
		GetOrderInfoByOid(ctx context.Context, in *OrderId, opts ...grpc.CallOption) (*OrderInfo, error)
		GetOrderListByUid(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*OrderListResponse, error)
	}

	defaultOrder struct {
		cli zrpc.Client
	}
)

func NewOrder(cli zrpc.Client) Order {
	return &defaultOrder{
		cli: cli,
	}
}

func (m *defaultOrder) GetOrderInfoByID(ctx context.Context, in *Id, opts ...grpc.CallOption) (*OrderInfo, error) {
	client := proto.NewOrderClient(m.cli.Conn())
	return client.GetOrderInfoByID(ctx, in, opts...)
}

func (m *defaultOrder) GetOrderInfoByOid(ctx context.Context, in *OrderId, opts ...grpc.CallOption) (*OrderInfo, error) {
	client := proto.NewOrderClient(m.cli.Conn())
	return client.GetOrderInfoByOid(ctx, in, opts...)
}

func (m *defaultOrder) GetOrderListByUid(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*OrderListResponse, error) {
	client := proto.NewOrderClient(m.cli.Conn())
	return client.GetOrderListByUid(ctx, in, opts...)
}
